import React from "react";
import Box from '@mui/material/Box';
import Head from 'next/head'
import firebaseApp from "../firebase/clientApp";
// Import the useAuthStateHook
import { useAuthState } from "react-firebase-hooks/auth";
import { useCollection } from "react-firebase-hooks/firestore";
import Auth from "../components/Auth";
import VoterList from "../components/VoterList";

export default function Home() {
  // Destructure user, loading, and error out of the hook.
  const [user, loading, error] = useAuthState(firebaseApp.auth());

  // console.log the current user and loading status
  console.log("Loading:", loading, "|", "Current user:", user);

  const db = firebaseApp.firestore();

  const addVoteDocument = async (vote) => {
    await db.collection("votes").doc(user.uid).set({
      vote,
    });
  };
  const [votes, votesLoading, votesError] = useCollection(
    db.collection("votes"),
    {}
  );

  if (!votesLoading && votes) {
    votes.docs.map((doc) => console.log(doc.data()));
  }
  return (
    <div>
      <Head>
        <title>Immersive Tech Companion App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Box
          sx={{
            display: "flex",
            height: "100vh",
            width: "100vw",
            alignItems: "center",
            justifyContent: "center",
            flexDirection: "column",
            gridGap: 8,
            background:
              "linear-gradient(180deg, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%)",
          }}>
          {loading && <h4>Loading...</h4>}
          <Auth />
          {user && (
            <>
              <h1>Pineapple or Pizza?</h1>
              <Box sx={{ flexDirection: "row", display: "flex" }}>
                <button style={{ fontSize: 32, marginRight: 8 }} onClick={() => addVoteDocument("yes")}>‚úîÔ∏èüççüçï</button>
                <h3>
                  Pineapple Lovers:{" "}
                  {
                    votes?.docs?.filter(
                      (doc) => doc.data().vote === "yes"
                    ).length
                  }
                </h3>
              </Box>
              <Box sx={{ flexDirection: "row", display: "flex" }}>
                <button style={{ fontSize: 32 }} onClick={() => addVoteDocument("no")}>‚ùåüççüçï</button>
                <h3>
                  Pineapple Haters:{" "}
                  {
                    votes?.docs?.filter(
                      (doc) => doc.data().vote === "no"
                    ).length
                  }
                </h3>
              </Box>
            </>
          )}
          <Box sx={{ marginTop: "64px" }}>
            <h3>Voters:</h3>
            <Box
              sx={{
                maxHeight: "320px",
                overflowY: "auto",
                width: "240px",
              }}
            >
              {votes?.docs?.map((doc) => (
                <>
                  <VoterList id={doc.id} key={doc.id} vote={doc.data().vote} />
                </>
              ))}
            </Box>
          </Box>
        </Box>
      </main>
    </div>
  )
}
